{
  "Name": "codebuild",
  "Actions": [
    {
      "Name": "BatchDeleteBuilds",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "BatchGetBuildBatches",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "BatchGetBuilds",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "BatchGetCommandExecutions",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "sandbox"
        }
      ]
    },
    {
      "Name": "BatchGetFleets",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "fleet"
        }
      ]
    },
    {
      "Name": "BatchGetProjects",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "BatchGetReportGroups",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "BatchGetReports",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "BatchGetSandboxes",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "BatchPutCodeCoverages",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "BatchPutTestCases",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "CreateFleet",
      "ActionConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "codebuild:computeConfiguration",
        "codebuild:computeConfiguration.disk",
        "codebuild:computeConfiguration.instanceType",
        "codebuild:computeConfiguration.machineType",
        "codebuild:computeConfiguration.memory",
        "codebuild:computeConfiguration.vCpu",
        "codebuild:computeType",
        "codebuild:environmentType",
        "codebuild:fleetServiceRole",
        "codebuild:imageId",
        "codebuild:vpcConfig",
        "codebuild:vpcConfig.securityGroupIds",
        "codebuild:vpcConfig.subnets",
        "codebuild:vpcConfig.vpcId"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "fleet"
        }
      ]
    },
    {
      "Name": "CreateProject",
      "ActionConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "codebuild:artifacts",
        "codebuild:artifacts.bucketOwnerAccess",
        "codebuild:artifacts.encryptionDisabled",
        "codebuild:artifacts.location",
        "codebuild:autoRetryLimit",
        "codebuild:buildBatchConfig",
        "codebuild:buildBatchConfig.restrictions.computeTypesAllowed",
        "codebuild:buildBatchConfig.restrictions.fleetsAllowed",
        "codebuild:buildBatchConfig.serviceRole",
        "codebuild:cache",
        "codebuild:cache.location",
        "codebuild:cache.modes",
        "codebuild:cache.type",
        "codebuild:concurrentBuildLimit",
        "codebuild:encryptionKey",
        "codebuild:environment",
        "codebuild:environment.certificate",
        "codebuild:environment.computeConfiguration",
        "codebuild:environment.computeConfiguration.disk",
        "codebuild:environment.computeConfiguration.instanceType",
        "codebuild:environment.computeConfiguration.machineType",
        "codebuild:environment.computeConfiguration.memory",
        "codebuild:environment.computeConfiguration.vCpu",
        "codebuild:environment.computeType",
        "codebuild:environment.environmentVariables",
        "codebuild:environment.environmentVariables.name",
        "codebuild:environment.environmentVariables.value",
        "codebuild:environment.environmentVariables/${name}.value",
        "codebuild:environment.fleet.fleetArn",
        "codebuild:environment.image",
        "codebuild:environment.imagePullCredentialsType",
        "codebuild:environment.privilegedMode",
        "codebuild:environment.registryCredential",
        "codebuild:environment.registryCredential.credential",
        "codebuild:environment.registryCredential.credentialProvider",
        "codebuild:environment.type",
        "codebuild:fileSystemLocations.identifier",
        "codebuild:fileSystemLocations.location",
        "codebuild:fileSystemLocations.type",
        "codebuild:fileSystemLocations/${identifier}.location",
        "codebuild:fileSystemLocations/${identifier}.type",
        "codebuild:logsConfig",
        "codebuild:logsConfig.s3Logs",
        "codebuild:logsConfig.s3Logs.bucketOwnerAccess",
        "codebuild:logsConfig.s3Logs.encryptionDisabled",
        "codebuild:logsConfig.s3Logs.location",
        "codebuild:logsConfig.s3Logs.status",
        "codebuild:secondaryArtifacts",
        "codebuild:secondaryArtifacts.artifactIdentifier",
        "codebuild:secondaryArtifacts.bucketOwnerAccess",
        "codebuild:secondaryArtifacts.encryptionDisabled",
        "codebuild:secondaryArtifacts.location",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.bucketOwnerAccess",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.encryptionDisabled",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.location",
        "codebuild:secondarySources",
        "codebuild:secondarySources.auth.resource",
        "codebuild:secondarySources.auth.type",
        "codebuild:secondarySources.buildStatusConfig.context",
        "codebuild:secondarySources.buildStatusConfig.targetUrl",
        "codebuild:secondarySources.buildspec",
        "codebuild:secondarySources.insecureSsl",
        "codebuild:secondarySources.location",
        "codebuild:secondarySources.sourceIdentifier",
        "codebuild:secondarySources/${sourceIdentifier}.auth.resource",
        "codebuild:secondarySources/${sourceIdentifier}.auth.type",
        "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.context",
        "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.targetUrl",
        "codebuild:secondarySources/${sourceIdentifier}.buildspec",
        "codebuild:secondarySources/${sourceIdentifier}.insecureSsl",
        "codebuild:secondarySources/${sourceIdentifier}.location",
        "codebuild:serviceRole",
        "codebuild:source",
        "codebuild:source.auth.resource",
        "codebuild:source.auth.type",
        "codebuild:source.buildStatusConfig.context",
        "codebuild:source.buildStatusConfig.targetUrl",
        "codebuild:source.buildspec",
        "codebuild:source.insecureSsl",
        "codebuild:source.location",
        "codebuild:vpcConfig",
        "codebuild:vpcConfig.securityGroupIds",
        "codebuild:vpcConfig.subnets",
        "codebuild:vpcConfig.vpcId"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "CreateReport",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "CreateReportGroup",
      "ActionConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "codebuild:exportConfig.s3Destination.bucket",
        "codebuild:exportConfig.s3Destination.bucketOwner",
        "codebuild:exportConfig.s3Destination.encryptionDisabled",
        "codebuild:exportConfig.s3Destination.encryptionKey",
        "codebuild:exportConfig.s3Destination.path"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "CreateWebhook",
      "ActionConditionKeys": [
        "codebuild:buildType",
        "codebuild:manualCreation",
        "codebuild:scopeConfiguration.domain",
        "codebuild:scopeConfiguration.name",
        "codebuild:scopeConfiguration.scope"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "DeleteBuildBatch",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "DeleteFleet",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "fleet"
        }
      ]
    },
    {
      "Name": "DeleteOAuthToken",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      }
    },
    {
      "Name": "DeleteProject",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "DeleteReport",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "DeleteReportGroup",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "DeleteResourcePolicy",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": true,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        },
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "DeleteSourceCredentials",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      }
    },
    {
      "Name": "DeleteWebhook",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "DescribeCodeCoverages",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "DescribeTestCases",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "GetReportGroupTrend",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "GetResourcePolicy",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "project"
        },
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "ImportSourceCredentials",
      "ActionConditionKeys": [
        "codebuild:authType",
        "codebuild:serverType",
        "codebuild:shouldOverwrite",
        "codebuild:token",
        "codebuild:username"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      }
    },
    {
      "Name": "InvalidateProjectCache",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "ListBuildBatches",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListBuildBatchesForProject",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "ListBuilds",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListBuildsForProject",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "ListCommandExecutionsForSandbox",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "sandbox"
        }
      ]
    },
    {
      "Name": "ListConnectedOAuthAccounts",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListCuratedEnvironmentImages",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListFleets",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListProjects",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListReportGroups",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListReports",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListReportsForReportGroup",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "ListRepositories",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListSandboxes",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListSandboxesForProject",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "ListSharedProjects",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListSharedReportGroups",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "ListSourceCredentials",
      "Annotations": {
        "Properties": {
          "IsList": true,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": false
        }
      }
    },
    {
      "Name": "PersistOAuthToken",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      }
    },
    {
      "Name": "PutResourcePolicy",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": true,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        },
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "RetryBuild",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "RetryBuildBatch",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "StartBuild",
      "ActionConditionKeys": [
        "codebuild:artifacts",
        "codebuild:artifacts.bucketOwnerAccess",
        "codebuild:artifacts.encryptionDisabled",
        "codebuild:artifacts.location",
        "codebuild:autoRetryLimit",
        "codebuild:cache",
        "codebuild:cache.location",
        "codebuild:cache.modes",
        "codebuild:cache.type",
        "codebuild:encryptionKey",
        "codebuild:environment",
        "codebuild:environment.certificate",
        "codebuild:environment.computeType",
        "codebuild:environment.environmentVariables",
        "codebuild:environment.environmentVariables.name",
        "codebuild:environment.environmentVariables.value",
        "codebuild:environment.environmentVariables/${name}.value",
        "codebuild:environment.fleet.fleetArn",
        "codebuild:environment.image",
        "codebuild:environment.imagePullCredentialsType",
        "codebuild:environment.privilegedMode",
        "codebuild:environment.registryCredential",
        "codebuild:environment.registryCredential.credential",
        "codebuild:environment.registryCredential.credentialProvider",
        "codebuild:environment.type",
        "codebuild:logsConfig",
        "codebuild:logsConfig.s3Logs",
        "codebuild:logsConfig.s3Logs.bucketOwnerAccess",
        "codebuild:logsConfig.s3Logs.encryptionDisabled",
        "codebuild:logsConfig.s3Logs.location",
        "codebuild:logsConfig.s3Logs.status",
        "codebuild:secondaryArtifacts",
        "codebuild:secondaryArtifacts.artifactIdentifier",
        "codebuild:secondaryArtifacts.bucketOwnerAccess",
        "codebuild:secondaryArtifacts.encryptionDisabled",
        "codebuild:secondaryArtifacts.location",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.bucketOwnerAccess",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.encryptionDisabled",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.location",
        "codebuild:secondarySources",
        "codebuild:secondarySources.auth.resource",
        "codebuild:secondarySources.auth.type",
        "codebuild:secondarySources.buildStatusConfig.context",
        "codebuild:secondarySources.buildStatusConfig.targetUrl",
        "codebuild:secondarySources.buildspec",
        "codebuild:secondarySources.insecureSsl",
        "codebuild:secondarySources.location",
        "codebuild:secondarySources.sourceIdentifier",
        "codebuild:secondarySources/${sourceIdentifier}.auth.resource",
        "codebuild:secondarySources/${sourceIdentifier}.auth.type",
        "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.context",
        "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.targetUrl",
        "codebuild:secondarySources/${sourceIdentifier}.buildspec",
        "codebuild:secondarySources/${sourceIdentifier}.insecureSsl",
        "codebuild:secondarySources/${sourceIdentifier}.location",
        "codebuild:serviceRole",
        "codebuild:source",
        "codebuild:source.auth.resource",
        "codebuild:source.auth.type",
        "codebuild:source.buildStatusConfig.context",
        "codebuild:source.buildStatusConfig.targetUrl",
        "codebuild:source.buildspec",
        "codebuild:source.insecureSsl",
        "codebuild:source.location"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "StartBuildBatch",
      "ActionConditionKeys": [
        "codebuild:artifacts",
        "codebuild:artifacts.bucketOwnerAccess",
        "codebuild:artifacts.encryptionDisabled",
        "codebuild:artifacts.location",
        "codebuild:buildBatchConfig",
        "codebuild:buildBatchConfig.restrictions.computeTypesAllowed",
        "codebuild:buildBatchConfig.restrictions.fleetsAllowed",
        "codebuild:buildBatchConfig.serviceRole",
        "codebuild:cache",
        "codebuild:cache.location",
        "codebuild:cache.modes",
        "codebuild:cache.type",
        "codebuild:encryptionKey",
        "codebuild:environment",
        "codebuild:environment.certificate",
        "codebuild:environment.computeType",
        "codebuild:environment.environmentVariables",
        "codebuild:environment.environmentVariables.name",
        "codebuild:environment.environmentVariables.value",
        "codebuild:environment.environmentVariables/${name}.value",
        "codebuild:environment.image",
        "codebuild:environment.imagePullCredentialsType",
        "codebuild:environment.privilegedMode",
        "codebuild:environment.registryCredential",
        "codebuild:environment.registryCredential.credential",
        "codebuild:environment.registryCredential.credentialProvider",
        "codebuild:environment.type",
        "codebuild:logsConfig",
        "codebuild:logsConfig.s3Logs",
        "codebuild:logsConfig.s3Logs.bucketOwnerAccess",
        "codebuild:logsConfig.s3Logs.encryptionDisabled",
        "codebuild:logsConfig.s3Logs.location",
        "codebuild:logsConfig.s3Logs.status",
        "codebuild:secondaryArtifacts",
        "codebuild:secondaryArtifacts.artifactIdentifier",
        "codebuild:secondaryArtifacts.bucketOwnerAccess",
        "codebuild:secondaryArtifacts.encryptionDisabled",
        "codebuild:secondaryArtifacts.location",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.bucketOwnerAccess",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.encryptionDisabled",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.location",
        "codebuild:secondarySources",
        "codebuild:secondarySources.auth.resource",
        "codebuild:secondarySources.auth.type",
        "codebuild:secondarySources.buildStatusConfig.context",
        "codebuild:secondarySources.buildStatusConfig.targetUrl",
        "codebuild:secondarySources.buildspec",
        "codebuild:secondarySources.insecureSsl",
        "codebuild:secondarySources.location",
        "codebuild:secondarySources.sourceIdentifier",
        "codebuild:secondarySources/${sourceIdentifier}.auth.resource",
        "codebuild:secondarySources/${sourceIdentifier}.auth.type",
        "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.context",
        "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.targetUrl",
        "codebuild:secondarySources/${sourceIdentifier}.buildspec",
        "codebuild:secondarySources/${sourceIdentifier}.insecureSsl",
        "codebuild:secondarySources/${sourceIdentifier}.location",
        "codebuild:serviceRole",
        "codebuild:source",
        "codebuild:source.auth.resource",
        "codebuild:source.auth.type",
        "codebuild:source.buildspec",
        "codebuild:source.insecureSsl",
        "codebuild:source.location"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "StartCommandExecution",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "sandbox"
        }
      ]
    },
    {
      "Name": "StartSandbox",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "StartSandboxConnection",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "sandbox"
        }
      ]
    },
    {
      "Name": "StopBuild",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "StopBuildBatch",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "StopSandbox",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "UpdateFleet",
      "ActionConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "codebuild:computeConfiguration",
        "codebuild:computeConfiguration.disk",
        "codebuild:computeConfiguration.instanceType",
        "codebuild:computeConfiguration.machineType",
        "codebuild:computeConfiguration.memory",
        "codebuild:computeConfiguration.vCpu",
        "codebuild:computeType",
        "codebuild:environmentType",
        "codebuild:fleetServiceRole",
        "codebuild:imageId",
        "codebuild:vpcConfig",
        "codebuild:vpcConfig.securityGroupIds",
        "codebuild:vpcConfig.subnets",
        "codebuild:vpcConfig.vpcId"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "fleet"
        }
      ]
    },
    {
      "Name": "UpdateProject",
      "ActionConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "codebuild:artifacts",
        "codebuild:artifacts.bucketOwnerAccess",
        "codebuild:artifacts.encryptionDisabled",
        "codebuild:artifacts.location",
        "codebuild:autoRetryLimit",
        "codebuild:buildBatchConfig",
        "codebuild:buildBatchConfig.restrictions.computeTypesAllowed",
        "codebuild:buildBatchConfig.restrictions.fleetsAllowed",
        "codebuild:buildBatchConfig.serviceRole",
        "codebuild:cache",
        "codebuild:cache.location",
        "codebuild:cache.modes",
        "codebuild:cache.type",
        "codebuild:concurrentBuildLimit",
        "codebuild:encryptionKey",
        "codebuild:environment",
        "codebuild:environment.certificate",
        "codebuild:environment.computeConfiguration",
        "codebuild:environment.computeConfiguration.disk",
        "codebuild:environment.computeConfiguration.instanceType",
        "codebuild:environment.computeConfiguration.machineType",
        "codebuild:environment.computeConfiguration.memory",
        "codebuild:environment.computeConfiguration.vCpu",
        "codebuild:environment.computeType",
        "codebuild:environment.environmentVariables",
        "codebuild:environment.environmentVariables.name",
        "codebuild:environment.environmentVariables.value",
        "codebuild:environment.environmentVariables/${name}.value",
        "codebuild:environment.fleet.fleetArn",
        "codebuild:environment.image",
        "codebuild:environment.imagePullCredentialsType",
        "codebuild:environment.privilegedMode",
        "codebuild:environment.registryCredential",
        "codebuild:environment.registryCredential.credential",
        "codebuild:environment.registryCredential.credentialProvider",
        "codebuild:environment.type",
        "codebuild:fileSystemLocations.identifier",
        "codebuild:fileSystemLocations.location",
        "codebuild:fileSystemLocations.type",
        "codebuild:fileSystemLocations/${identifier}.location",
        "codebuild:fileSystemLocations/${identifier}.type",
        "codebuild:logsConfig",
        "codebuild:logsConfig.s3Logs",
        "codebuild:logsConfig.s3Logs.bucketOwnerAccess",
        "codebuild:logsConfig.s3Logs.encryptionDisabled",
        "codebuild:logsConfig.s3Logs.location",
        "codebuild:logsConfig.s3Logs.status",
        "codebuild:secondaryArtifacts",
        "codebuild:secondaryArtifacts.artifactIdentifier",
        "codebuild:secondaryArtifacts.bucketOwnerAccess",
        "codebuild:secondaryArtifacts.encryptionDisabled",
        "codebuild:secondaryArtifacts.location",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.bucketOwnerAccess",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.encryptionDisabled",
        "codebuild:secondaryArtifacts/${artifactIdentifier}.location",
        "codebuild:secondarySources",
        "codebuild:secondarySources.auth.resource",
        "codebuild:secondarySources.auth.type",
        "codebuild:secondarySources.buildStatusConfig.context",
        "codebuild:secondarySources.buildStatusConfig.targetUrl",
        "codebuild:secondarySources.buildspec",
        "codebuild:secondarySources.insecureSsl",
        "codebuild:secondarySources.location",
        "codebuild:secondarySources.sourceIdentifier",
        "codebuild:secondarySources/${sourceIdentifier}.auth.resource",
        "codebuild:secondarySources/${sourceIdentifier}.auth.type",
        "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.context",
        "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.targetUrl",
        "codebuild:secondarySources/${sourceIdentifier}.buildspec",
        "codebuild:secondarySources/${sourceIdentifier}.insecureSsl",
        "codebuild:secondarySources/${sourceIdentifier}.location",
        "codebuild:serviceRole",
        "codebuild:source",
        "codebuild:source.auth.resource",
        "codebuild:source.auth.type",
        "codebuild:source.buildStatusConfig.context",
        "codebuild:source.buildStatusConfig.targetUrl",
        "codebuild:source.buildspec",
        "codebuild:source.insecureSsl",
        "codebuild:source.location",
        "codebuild:vpcConfig",
        "codebuild:vpcConfig.securityGroupIds",
        "codebuild:vpcConfig.subnets",
        "codebuild:vpcConfig.vpcId"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "UpdateProjectVisibility",
      "ActionConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "codebuild:projectVisibility"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    },
    {
      "Name": "UpdateReport",
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "UpdateReportGroup",
      "ActionConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "codebuild:exportConfig.s3Destination.bucket",
        "codebuild:exportConfig.s3Destination.bucketOwner",
        "codebuild:exportConfig.s3Destination.encryptionDisabled",
        "codebuild:exportConfig.s3Destination.encryptionKey",
        "codebuild:exportConfig.s3Destination.path"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "report-group"
        }
      ]
    },
    {
      "Name": "UpdateWebhook",
      "ActionConditionKeys": [
        "codebuild:buildType",
        "codebuild:manualCreation",
        "codebuild:scopeConfiguration.domain",
        "codebuild:scopeConfiguration.name",
        "codebuild:scopeConfiguration.scope"
      ],
      "Annotations": {
        "Properties": {
          "IsList": false,
          "IsPermissionManagement": false,
          "IsTaggingOnly": false,
          "IsWrite": true
        }
      },
      "Resources": [
        {
          "Name": "project"
        }
      ]
    }
  ],
  "ConditionKeys": [
    {
      "Name": "aws:RequestTag/${TagKey}",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "aws:ResourceTag/${TagKey}",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "aws:TagKeys",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:artifacts",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:artifacts.bucketOwnerAccess",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:artifacts.encryptionDisabled",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:artifacts.location",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:authType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:autoRetryLimit",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "codebuild:buildArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "codebuild:buildBatchConfig",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:buildBatchConfig.restrictions.computeTypesAllowed",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:buildBatchConfig.restrictions.fleetsAllowed",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:buildBatchConfig.serviceRole",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:buildType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:cache",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:cache.location",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:cache.modes",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:cache.type",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:computeConfiguration",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:computeConfiguration.disk",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "codebuild:computeConfiguration.instanceType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:computeConfiguration.machineType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:computeConfiguration.memory",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "codebuild:computeConfiguration.vCpu",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "codebuild:computeType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:concurrentBuildLimit",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "codebuild:encryptionKey",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:environment.certificate",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.computeConfiguration",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:environment.computeConfiguration.disk",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "codebuild:environment.computeConfiguration.instanceType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.computeConfiguration.machineType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.computeConfiguration.memory",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "codebuild:environment.computeConfiguration.vCpu",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "codebuild:environment.computeType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.environmentVariables",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:environment.environmentVariables.name",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:environment.environmentVariables.value",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:environment.environmentVariables/${name}.value",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.fleet.fleetArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "codebuild:environment.image",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.imagePullCredentialsType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.privilegedMode",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:environment.registryCredential",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:environment.registryCredential.credential",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.registryCredential.credentialProvider",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environment.type",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:environmentType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:exportConfig.s3Destination.bucket",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:exportConfig.s3Destination.bucketOwner",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:exportConfig.s3Destination.encryptionDisabled",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:exportConfig.s3Destination.encryptionKey",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:exportConfig.s3Destination.path",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:fileSystemLocations.identifier",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:fileSystemLocations.location",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:fileSystemLocations.type",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:fileSystemLocations/${identifier}.location",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:fileSystemLocations/${identifier}.type",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:fleetServiceRole",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:imageId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:logsConfig",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:logsConfig.s3Logs",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:logsConfig.s3Logs.bucketOwnerAccess",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:logsConfig.s3Logs.encryptionDisabled",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:logsConfig.s3Logs.location",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:logsConfig.s3Logs.status",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:manualCreation",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:projectArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "codebuild:projectVisibility",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:scopeConfiguration.domain",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:scopeConfiguration.name",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:scopeConfiguration.scope",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:secondaryArtifacts",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:secondaryArtifacts.artifactIdentifier",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondaryArtifacts.bucketOwnerAccess",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondaryArtifacts.encryptionDisabled",
      "Types": [
        "ArrayOfBool"
      ]
    },
    {
      "Name": "codebuild:secondaryArtifacts.location",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondaryArtifacts/${artifactIdentifier}.bucketOwnerAccess",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:secondaryArtifacts/${artifactIdentifier}.encryptionDisabled",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:secondaryArtifacts/${artifactIdentifier}.location",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:secondarySources",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:secondarySources.auth.resource",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondarySources.auth.type",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondarySources.buildStatusConfig.context",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondarySources.buildStatusConfig.targetUrl",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondarySources.buildspec",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:secondarySources.insecureSsl",
      "Types": [
        "ArrayOfBool"
      ]
    },
    {
      "Name": "codebuild:secondarySources.location",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondarySources.sourceIdentifier",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:secondarySources/${sourceIdentifier}.auth.resource",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:secondarySources/${sourceIdentifier}.auth.type",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.context",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:secondarySources/${sourceIdentifier}.buildStatusConfig.targetUrl",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:secondarySources/${sourceIdentifier}.buildspec",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:secondarySources/${sourceIdentifier}.insecureSsl",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:secondarySources/${sourceIdentifier}.location",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:serverType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:serviceRole",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:shouldOverwrite",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:source",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:source.auth.resource",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:source.auth.type",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:source.buildStatusConfig.context",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:source.buildStatusConfig.targetUrl",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:source.buildspec",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:source.insecureSsl",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:source.location",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:token",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:username",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "codebuild:vpcConfig",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "codebuild:vpcConfig.securityGroupIds",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:vpcConfig.subnets",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "codebuild:vpcConfig.vpcId",
      "Types": [
        "String"
      ]
    }
  ],
  "Resources": [
    {
      "Name": "build",
      "ARNFormats": [
        "arn:${Partition}:codebuild:${Region}:${Account}:build/${BuildId}"
      ]
    },
    {
      "Name": "build-batch",
      "ARNFormats": [
        "arn:${Partition}:codebuild:${Region}:${Account}:build-batch/${BuildBatchId}"
      ]
    },
    {
      "Name": "fleet",
      "ARNFormats": [
        "arn:${Partition}:codebuild:${Region}:${Account}:fleet/${FleetName}:${FleetId}"
      ]
    },
    {
      "Name": "project",
      "ARNFormats": [
        "arn:${Partition}:codebuild:${Region}:${Account}:project/${ProjectName}"
      ],
      "ConditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "report",
      "ARNFormats": [
        "arn:${Partition}:codebuild:${Region}:${Account}:report/${ReportGroupName}:${ReportId}"
      ]
    },
    {
      "Name": "report-group",
      "ARNFormats": [
        "arn:${Partition}:codebuild:${Region}:${Account}:report-group/${ReportGroupName}"
      ],
      "ConditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "sandbox",
      "ARNFormats": [
        "arn:${Partition}:codebuild:${Region}:${Account}:sandbox/${SandboxId}"
      ]
    }
  ],
  "Version": "v1.2"
}