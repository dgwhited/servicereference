{
  "Name": "ec2",
  "Actions": [
    {
      "Name": "AcceptAddressTransfer",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress"
          ]
        }
      ]
    },
    {
      "Name": "AcceptCapacityReservationBillingOwnership",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CapacityReservationFleet",
            "ec2:CreateDate",
            "ec2:DestinationCapacityReservationId",
            "ec2:EbsOptimized",
            "ec2:EndDate",
            "ec2:EndDateType",
            "ec2:InstanceCount",
            "ec2:InstanceMatchCriteria",
            "ec2:InstancePlatform",
            "ec2:InstanceType",
            "ec2:OutpostArn",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SourceCapacityReservationId",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "AcceptReservedInstancesExchangeQuote",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "AcceptTransitGatewayMulticastDomainAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "AcceptTransitGatewayPeeringAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "AcceptTransitGatewayVpcAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "AcceptVpcEndpointConnections",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "AcceptVpcPeeringConnection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        {
          "Name": "vpc-peering-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      ]
    },
    {
      "Name": "AdvertiseByoipCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "AllocateAddress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "AllocateHosts",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "dedicated-host",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AutoPlacement",
            "ec2:AvailabilityZone",
            "ec2:HostRecovery",
            "ec2:InstanceType",
            "ec2:Quantity"
          ]
        }
      ]
    },
    {
      "Name": "AllocateIpamPoolCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ApplySecurityGroupsToClientVpnTargetNetwork",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "AssignIpv6Addresses",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "AssignPrivateIpAddresses",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "AssignPrivateNatGatewayAddress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "natgateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "AssociateAddress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "AssociateCapacityReservationBillingOwner",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CapacityReservationFleet",
            "ec2:CreateDate",
            "ec2:DestinationCapacityReservationId",
            "ec2:EbsOptimized",
            "ec2:EndDate",
            "ec2:EndDateType",
            "ec2:InstanceCount",
            "ec2:InstanceMatchCriteria",
            "ec2:InstancePlatform",
            "ec2:InstanceType",
            "ec2:OutpostArn",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SourceCapacityReservationId",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "AssociateClientVpnTargetNetwork",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        }
      ]
    },
    {
      "Name": "AssociateDhcpOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "dhcp-options",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DhcpOptionsID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "AssociateEnclaveCertificateIamRole",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "certificate"
        },
        {
          "Name": "role"
        }
      ]
    },
    {
      "Name": "AssociateIamInstanceProfile",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "AssociateInstanceEventWindow",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance-event-window",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "AssociateIpamByoasn",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "AssociateIpamResourceDiscovery",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-resource-discovery-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "AssociateNatGatewayAddress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "natgateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "AssociateRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "AssociateSecurityGroupVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Ipv4IpamPoolId",
            "ec2:Ipv6IpamPoolId",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "AssociateSubnetCidrBlock",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "AssociateTransitGatewayMulticastDomain",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "AssociateTransitGatewayPolicyTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-policy-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayPolicyTableId"
          ]
        }
      ]
    },
    {
      "Name": "AssociateTransitGatewayRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "AssociateTrunkInterface",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "AssociateVerifiedAccessInstanceWebAcl",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "AssociateVpcCidrBlock",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv6pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Ipv4IpamPoolId",
            "ec2:Ipv6IpamPoolId",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "AttachClassicLinkVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "AttachInternetGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "AttachNetworkInterface",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "AttachVerifiedAccessTrustProvider",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-trust-provider",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "AttachVolume",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "AttachVpnGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "AuthorizeClientVpnIngress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "AuthorizeSecurityGroupEgress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "security-group-rule",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "AuthorizeSecurityGroupIngress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "security-group-rule",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "BundleInstance",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CancelBundleTask",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CancelCapacityReservation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:CapacityReservationFleet"
          ]
        }
      ]
    },
    {
      "Name": "CancelCapacityReservationFleets",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation-fleet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CancelConversionTask",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CancelDeclarativePoliciesReport",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "declarative-policies-report",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CancelExportTask",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "export-image-task",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "export-instance-task",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CancelImageLaunchPermission",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "CancelImportTask",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "import-image-task",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "import-snapshot-task",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CancelReservedInstancesListing",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CancelSpotFleetRequests",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "spot-fleet-request",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CancelSpotInstanceRequests",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "spot-instances-request",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ConfirmProductInstance",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CopyFpgaImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fpga-image",
          "ConditionKeys": [
            "ec2:Owner"
          ]
        }
      ]
    },
    {
      "Name": "CopyImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ImageID",
            "ec2:Owner"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CopySnapshot",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:OutpostArn",
            "ec2:SnapshotID"
          ]
        }
      ]
    },
    {
      "Name": "CreateCapacityReservation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:CapacityReservationFleet"
          ]
        }
      ]
    },
    {
      "Name": "CreateCapacityReservationBySplitting",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CapacityReservationFleet",
            "ec2:CreateDate",
            "ec2:DestinationCapacityReservationId",
            "ec2:EbsOptimized",
            "ec2:EndDate",
            "ec2:EndDateType",
            "ec2:InstanceCount",
            "ec2:InstanceMatchCriteria",
            "ec2:InstancePlatform",
            "ec2:InstanceType",
            "ec2:OutpostArn",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SourceCapacityReservationId",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "CreateCapacityReservationFleet",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation-fleet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateCarrierGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "carrier-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateClientVpnEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateClientVpnRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        }
      ]
    },
    {
      "Name": "CreateCoipCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateCoipPool",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateCoipPoolPermission",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateCustomerGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "customer-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateDefaultSubnet",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CreateDefaultVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CreateDhcpOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "dhcp-options",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:DhcpOptionsID"
          ]
        }
      ]
    },
    {
      "Name": "CreateEgressOnlyInternetGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "egress-only-internet-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateFleet",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fleet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:PlacementGroup",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:KmsKeyId",
            "ec2:ParentSnapshot",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "CreateFlowLogs",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        {
          "Name": "vpc-flow-log",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateFpgaImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fpga-image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Owner",
            "ec2:Public"
          ]
        }
      ]
    },
    {
      "Name": "CreateImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ImageID",
            "ec2:Owner"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:OutpostArn",
            "ec2:ParentVolume",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "CreateInstanceConnectEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance-connect-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:SubnetID"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "CreateInstanceEventWindow",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance-event-window",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateInstanceExportTask",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "export-instance-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "CreateInternetGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:InternetGatewayID"
          ]
        }
      ]
    },
    {
      "Name": "CreateIpam",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateIpamExternalResourceVerificationToken",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-external-resource-verification-token",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateIpamPool",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateIpamResourceDiscovery",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateIpamScope",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateKeyPair",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "key-pair",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:KeyPairType"
          ]
        }
      ]
    },
    {
      "Name": "CreateLaunchTemplate",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateLaunchTemplateVersion",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateLocalGatewayRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-virtual-interface-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateLocalGatewayRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateLocalGatewayRouteTablePermission",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table-virtual-interface-group-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "local-gateway-virtual-interface-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateLocalGatewayRouteTableVpcAssociation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table-vpc-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateManagedPrefixList",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateNatGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "natgateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "CreateNetworkAcl",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-acl",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:NetworkAclID"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateNetworkAclEntry",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-acl",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "CreateNetworkInsightsAccessScope",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-access-scope",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateNetworkInsightsPath",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-path",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-peering-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateNetworkInterface",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:NetworkInterfaceID"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "CreateNetworkInterfacePermission",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AuthorizedService",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "CreatePlacementGroup",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy"
          ]
        }
      ]
    },
    {
      "Name": "CreatePublicIpv4Pool",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateReplaceRootVolumeTask",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "replace-root-volume-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:VolumeID"
          ]
        }
      ]
    },
    {
      "Name": "CreateReservedInstancesListing",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CreateRestoreImageTask",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ImageID",
            "ec2:Owner"
          ]
        }
      ]
    },
    {
      "Name": "CreateRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "CreateRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:RouteTableID"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateSecurityGroup",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:SecurityGroupID"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateSnapshot",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Location",
            "ec2:OutpostArn",
            "ec2:ParentVolume",
            "ec2:SnapshotID",
            "ec2:SourceAvailabilityZone",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "CreateSnapshots",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Location",
            "ec2:OutpostArn",
            "ec2:ParentVolume",
            "ec2:SnapshotID",
            "ec2:SourceAvailabilityZone",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "CreateSpotDatafeedSubscription",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CreateStoreImageTask",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "CreateSubnet",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:SubnetID"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateSubnetCidrReservation",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "CreateTags",
      "ActionConditionKeys": [
        "ec2:CreateAction",
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "capacity-reservation-fleet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "carrier-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "customer-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "declarative-policies-report",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "dedicated-host",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AutoPlacement",
            "ec2:AvailabilityZone",
            "ec2:HostRecovery",
            "ec2:InstanceType",
            "ec2:Quantity",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "dhcp-options",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:DhcpOptionsID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "egress-only-internet-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "elastic-gpu",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ElasticGpuType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "export-image-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "export-instance-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "fleet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "fpga-image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "host-reservation",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "import-image-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "import-snapshot-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "instance-connect-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        },
        {
          "Name": "instance-event-window",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-external-resource-verification-token",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-resource-discovery-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv6pool-ec2",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "key-pair",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table-virtual-interface-group-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table-vpc-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-virtual-interface",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-virtual-interface-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "natgateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-acl",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "network-insights-access-scope",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-access-scope-analysis",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-analysis",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-path",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "replace-root-volume-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "reserved-instances",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:InstanceType",
            "ec2:ReservedInstancesOfferingType",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "security-group-rule",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        {
          "Name": "spot-fleet-request",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "spot-instances-request",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet-cidr-reservation",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-filter-rule",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-session",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-target",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-connect-peer",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayConnectPeerId"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        },
        {
          "Name": "transit-gateway-policy-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayPolicyTableId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        },
        {
          "Name": "transit-gateway-route-table-announcement",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableAnnouncementId"
          ]
        },
        {
          "Name": "verified-access-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-endpoint-target",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-policy",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-trust-provider",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        {
          "Name": "vpc-block-public-access-exclusion",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-connection",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceServiceRegion",
            "ec2:vpceSupportedRegion"
          ]
        },
        {
          "Name": "vpc-endpoint-service-permission",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-flow-log",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-peering-connection",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        },
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RoutingType"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateTrafficMirrorFilter",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateTrafficMirrorFilterRule",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-filter-rule",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateTrafficMirrorSession",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-session",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "traffic-mirror-target",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateTrafficMirrorTarget",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-target",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServiceName",
            "ec2:VpceServiceOwner"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayConnect",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayConnectPeer",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-connect-peer",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayConnectPeerId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayMulticastDomain",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayPeeringAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayPolicyTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-policy-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayPolicyTableId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayPrefixListReference",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayRouteTableAnnouncement",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        },
        {
          "Name": "transit-gateway-route-table-announcement",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayRouteTableAnnouncementId"
          ]
        }
      ]
    },
    {
      "Name": "CreateTransitGatewayVpcAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateVerifiedAccessEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "verified-access-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateVerifiedAccessGroup",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateVerifiedAccessInstance",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateVerifiedAccessTrustProvider",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-trust-provider",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateVolume",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:KmsKeyId",
            "ec2:ParentSnapshot",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv6pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Ipv4IpamPoolId",
            "ec2:Ipv6IpamPoolId",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpcBlockPublicAccessExclusion",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Ipv4IpamPoolId",
            "ec2:Ipv6IpamPoolId",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        {
          "Name": "vpc-block-public-access-exclusion",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpcEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcID"
          ]
        },
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:VpceServiceName",
            "ec2:VpceServiceOwner"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpcEndpointConnectionNotification",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceServiceRegion"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpcEndpointServiceConfiguration",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:VpceServicePrivateDnsName",
            "ec2:vpceMultiRegion",
            "ec2:vpceServiceRegion"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpcPeeringConnection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        {
          "Name": "vpc-peering-connection",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpnConnection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "customer-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:RoutingType"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpnConnectionRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "CreateVpnGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "DeleteCarrierGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "carrier-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteClientVpnEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "DeleteClientVpnRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeleteCoipCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteCoipPool",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteCoipPoolPermission",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteCustomerGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "customer-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteDhcpOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "dhcp-options",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:DhcpOptionsID",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteEgressOnlyInternetGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "egress-only-internet-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteFleets",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fleet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteFlowLogs",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-flow-log",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteFpgaImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fpga-image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteInstanceConnectEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance-connect-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID"
          ]
        }
      ]
    },
    {
      "Name": "DeleteInstanceEventWindow",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance-event-window",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteInternetGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteIpam",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteIpamExternalResourceVerificationToken",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-external-resource-verification-token",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteIpamPool",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteIpamResourceDiscovery",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteIpamScope",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteKeyPair",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "key-pair",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteLaunchTemplate",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteLaunchTemplateVersions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteLocalGatewayRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteLocalGatewayRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteLocalGatewayRouteTablePermission",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table-virtual-interface-group-association",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteLocalGatewayRouteTableVpcAssociation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table-vpc-association",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteManagedPrefixList",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNatGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "natgateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNetworkAcl",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-acl",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNetworkAclEntry",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-acl",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNetworkInsightsAccessScope",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-access-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNetworkInsightsAccessScopeAnalysis",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-access-scope-analysis",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNetworkInsightsAnalysis",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-analysis",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNetworkInsightsPath",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-path",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNetworkInterface",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeleteNetworkInterfacePermission",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeletePlacementGroup",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeletePublicIpv4Pool",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteQueuedReservedInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DeleteResourcePolicy",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeleteRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeleteSecurityGroup",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeleteSnapshot",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "DeleteSpotDatafeedSubscription",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DeleteSubnet",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DeleteSubnetCidrReservation",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DeleteTags",
      "ActionConditionKeys": [
        "aws:TagKeys",
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "capacity-reservation-fleet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "carrier-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "customer-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "declarative-policies-report",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "dedicated-host",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "dhcp-options",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "egress-only-internet-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "elastic-gpu",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "export-image-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "export-instance-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "fleet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "fpga-image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "host-reservation",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "import-image-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "import-snapshot-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "instance-connect-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "instance-event-window",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-external-resource-verification-token",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-resource-discovery-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv6pool-ec2",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "key-pair",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table-virtual-interface-group-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-route-table-vpc-association",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-virtual-interface",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-virtual-interface-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "natgateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-acl",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-access-scope",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-access-scope-analysis",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-analysis",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-path",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "replace-root-volume-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "reserved-instances",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "security-group-rule",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "spot-fleet-request",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "spot-instances-request",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "subnet-cidr-reservation",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-filter-rule",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-session",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-target",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-connect-peer",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-policy-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-route-table-announcement",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-endpoint-target",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-policy",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-trust-provider",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-block-public-access-exclusion",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-connection",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-service-permission",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-flow-log",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-peering-connection",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTrafficMirrorFilter",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTrafficMirrorFilterRule",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-filter-rule",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTrafficMirrorSession",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-session",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTrafficMirrorTarget",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-target",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayConnect",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayConnectPeer",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-connect-peer",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayConnectPeerId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayMulticastDomain",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayPeeringAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayPolicyTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-policy-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayPolicyTableId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayPrefixListReference",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayRouteTableAnnouncement",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-route-table-announcement",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableAnnouncementId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteTransitGatewayVpcAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVerifiedAccessEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVerifiedAccessGroup",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVerifiedAccessInstance",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVerifiedAccessTrustProvider",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-trust-provider",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVolume",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpcBlockPublicAccessExclusion",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-block-public-access-exclusion",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpcEndpointConnectionNotifications",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpcEndpointServiceConfigurations",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpcEndpoints",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServiceName"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpcPeeringConnection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-peering-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpnConnection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpnConnectionRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeleteVpnGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeprovisionByoipCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DeprovisionIpamByoasn",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeprovisionIpamPoolCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeprovisionPublicIpv4PoolCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DeregisterImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "DeregisterInstanceEventNotificationAttributes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DeregisterTransitGatewayMulticastGroupMembers",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "DeregisterTransitGatewayMulticastGroupSources",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "DescribeAccountAttributes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeAddressTransfers",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeAddresses",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeAddressesAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeAggregateIdFormat",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeAvailabilityZones",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeAwsNetworkPerformanceMetricSubscriptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeBundleTasks",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeByoipCidrs",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeCapacityBlockExtensionHistory",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CapacityReservationFleet",
            "ec2:CreateDate",
            "ec2:DestinationCapacityReservationId",
            "ec2:EbsOptimized",
            "ec2:EndDate",
            "ec2:EndDateType",
            "ec2:InstanceCount",
            "ec2:InstanceMatchCriteria",
            "ec2:InstancePlatform",
            "ec2:InstanceType",
            "ec2:OutpostArn",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SourceCapacityReservationId",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "DescribeCapacityBlockExtensionOfferings",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CapacityReservationFleet",
            "ec2:CreateDate",
            "ec2:DestinationCapacityReservationId",
            "ec2:EbsOptimized",
            "ec2:EndDate",
            "ec2:EndDateType",
            "ec2:InstanceCount",
            "ec2:InstanceMatchCriteria",
            "ec2:InstancePlatform",
            "ec2:InstanceType",
            "ec2:OutpostArn",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SourceCapacityReservationId",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "DescribeCapacityBlockOfferings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeCapacityReservationBillingRequests",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeCapacityReservationFleets",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeCapacityReservations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeCarrierGateways",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeClassicLinkInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeClientVpnAuthorizationRules",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DescribeClientVpnConnections",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "DescribeClientVpnEndpoints",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "DescribeClientVpnRoutes",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "DescribeClientVpnTargetNetworks",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "DescribeCoipPools",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeConversionTasks",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeCustomerGateways",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeDeclarativePoliciesReports",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeDhcpOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeEgressOnlyInternetGateways",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeElasticGpus",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeExportImageTasks",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeExportTasks",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeFastLaunchImages",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeFastSnapshotRestores",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeFleetHistory",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fleet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DescribeFleetInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fleet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DescribeFleets",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeFlowLogs",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeFpgaImageAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fpga-image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DescribeFpgaImages",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeHostReservationOfferings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeHostReservations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeHosts",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIamInstanceProfileAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIdFormat",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIdentityIdFormat",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeImageAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "DescribeImages",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeImportImageTasks",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeImportSnapshotTasks",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "DescribeInstanceConnectEndpoints",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceCreditSpecifications",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceEventNotificationAttributes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceEventWindows",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceImageMetadata",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceStatus",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceTopology",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceTypeOfferings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstanceTypes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeInternetGateways",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIpamByoasn",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIpamExternalResourceVerificationTokens",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIpamPools",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIpamResourceDiscoveries",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIpamResourceDiscoveryAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIpamScopes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIpams",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeIpv6Pools",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeKeyPairs",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLaunchTemplateVersions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLaunchTemplates",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLocalGatewayRouteTablePermissions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLocalGatewayRouteTableVpcAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLocalGatewayRouteTables",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLocalGatewayVirtualInterfaceGroups",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLocalGatewayVirtualInterfaces",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLocalGateways",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeLockedSnapshots",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeMacHosts",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeManagedPrefixLists",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeMovingAddresses",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNatGateways",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNetworkAcls",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNetworkInsightsAccessScopeAnalyses",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNetworkInsightsAccessScopes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNetworkInsightsAnalyses",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNetworkInsightsPaths",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNetworkInterfaceAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNetworkInterfacePermissions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeNetworkInterfaces",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribePlacementGroups",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribePrefixLists",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribePrincipalIdFormat",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribePublicIpv4Pools",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeRegions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeReplaceRootVolumeTasks",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeReservedInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeReservedInstancesListings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeReservedInstancesModifications",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeReservedInstancesOfferings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeRouteTables",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeScheduledInstanceAvailability",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeScheduledInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSecurityGroupReferences",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DescribeSecurityGroupRules",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSecurityGroupVpcAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSecurityGroups",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSnapshotAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "DescribeSnapshotTierStatus",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSnapshots",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSpotDatafeedSubscription",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSpotFleetInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "spot-fleet-request",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DescribeSpotFleetRequestHistory",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "spot-fleet-request",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DescribeSpotFleetRequests",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSpotInstanceRequests",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSpotPriceHistory",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeStaleSecurityGroups",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeStoreImageTasks",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeSubnets",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTags",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTrafficMirrorFilterRules",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTrafficMirrorFilters",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTrafficMirrorSessions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTrafficMirrorTargets",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayAttachments",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayConnectPeers",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayConnects",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayMulticastDomains",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayPeeringAttachments",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayPolicyTables",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayRouteTableAnnouncements",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayRouteTables",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGatewayVpcAttachments",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTransitGateways",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeTrunkInterfaceAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVerifiedAccessEndpoints",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVerifiedAccessGroups",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVerifiedAccessInstanceLoggingConfigurations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVerifiedAccessInstanceWebAclAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVerifiedAccessInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVerifiedAccessTrustProviders",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVolumeAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "DescribeVolumeStatus",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVolumes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVolumesModifications",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "DescribeVpcBlockPublicAccessExclusions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcBlockPublicAccessOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcClassicLink",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcClassicLinkDnsSupport",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcEndpointAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServiceName",
            "ec2:VpceServiceOwner"
          ]
        }
      ]
    },
    {
      "Name": "DescribeVpcEndpointConnectionNotifications",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcEndpointConnections",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcEndpointServiceConfigurations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcEndpointServicePermissions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "DescribeVpcEndpointServices",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcEndpoints",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcPeeringConnections",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpcs",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpnConnections",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DescribeVpnGateways",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DetachClassicLinkVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "DetachInternetGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "DetachNetworkInterface",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DetachVerifiedAccessTrustProvider",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-trust-provider",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DetachVolume",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "DetachVpnGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DisableAddressTransfer",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DisableAllowedImagesSettings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisableAwsNetworkPerformanceMetricSubscription",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisableEbsEncryptionByDefault",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisableFastLaunch",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "DisableFastSnapshotRestores",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "DisableImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "DisableImageBlockPublicAccess",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisableImageDeprecation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "DisableImageDeregistrationProtection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "DisableIpamOrganizationAdminAccount",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisableSerialConsoleAccess",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisableSnapshotBlockPublicAccess",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisableTransitGatewayRouteTablePropagation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        },
        {
          "Name": "transit-gateway-route-table-announcement",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableAnnouncementId"
          ]
        }
      ]
    },
    {
      "Name": "DisableVgwRoutePropagation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DisableVpcClassicLink",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "DisableVpcClassicLinkDnsSupport",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateAddress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateCapacityReservationBillingOwner",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CapacityReservationFleet",
            "ec2:CreateDate",
            "ec2:DestinationCapacityReservationId",
            "ec2:EbsOptimized",
            "ec2:EndDate",
            "ec2:EndDateType",
            "ec2:InstanceCount",
            "ec2:InstanceMatchCriteria",
            "ec2:InstancePlatform",
            "ec2:InstanceType",
            "ec2:OutpostArn",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SourceCapacityReservationId",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateClientVpnTargetNetwork",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateEnclaveCertificateIamRole",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "certificate"
        },
        {
          "Name": "role"
        }
      ]
    },
    {
      "Name": "DisassociateIamInstanceProfile",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateInstanceEventWindow",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance-event-window",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateIpamByoasn",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisassociateIpamResourceDiscovery",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-resource-discovery-association",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateNatGatewayAddress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "natgateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv6pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateSecurityGroupVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Ipv4IpamPoolId",
            "ec2:Ipv6IpamPoolId",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateSubnetCidrBlock",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateTransitGatewayMulticastDomain",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateTransitGatewayPolicyTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-policy-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayPolicyTableId"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateTransitGatewayRouteTable",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateTrunkInterface",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "DisassociateVerifiedAccessInstanceWebAcl",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "DisassociateVpcCidrBlock",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "EnableAddressTransfer",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "EnableAllowedImagesSettings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "EnableAwsNetworkPerformanceMetricSubscription",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "EnableEbsEncryptionByDefault",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "EnableFastLaunch",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "EnableFastSnapshotRestores",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "EnableImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "EnableImageBlockPublicAccess",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "EnableImageDeprecation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "EnableImageDeregistrationProtection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "EnableIpamOrganizationAdminAccount",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "EnableReachabilityAnalyzerOrganizationSharing",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "EnableSerialConsoleAccess",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "EnableSnapshotBlockPublicAccess",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "EnableTransitGatewayRouteTablePropagation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        },
        {
          "Name": "transit-gateway-route-table-announcement",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableAnnouncementId"
          ]
        }
      ]
    },
    {
      "Name": "EnableVgwRoutePropagation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "EnableVolumeIO",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "EnableVpcClassicLink",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "EnableVpcClassicLinkDnsSupport",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "ExportClientVpnClientCertificateRevocationList",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "ExportClientVpnClientConfiguration",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "ExportImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "export-image-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "ExportTransitGatewayRoutes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ExportVerifiedAccessInstanceClientConfiguration",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetAllowedImagesSettings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetAssociatedEnclaveCertificateIamRoles",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "certificate"
        }
      ]
    },
    {
      "Name": "GetAssociatedIpv6PoolCidrs",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetAwsNetworkPerformanceData",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetCapacityReservationUsage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:CapacityReservationFleet"
          ]
        }
      ]
    },
    {
      "Name": "GetCoipPoolUsage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "coip-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetConsoleOutput",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "GetConsoleScreenshot",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "GetDeclarativePoliciesReportSummary",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "declarative-policies-report",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetDefaultCreditSpecification",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetEbsDefaultKmsKeyId",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetEbsEncryptionByDefault",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetFlowLogsIntegrationTemplate",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-flow-log",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetGroupsForCapacityReservation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:CapacityReservationFleet"
          ]
        }
      ]
    },
    {
      "Name": "GetHostReservationPurchasePreview",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetImageBlockPublicAccessState",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetInstanceMetadataDefaults",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetInstanceTpmEkPub",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "GetInstanceTypesFromInstanceRequirements",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetInstanceUefiData",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "GetIpamAddressHistory",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetIpamDiscoveredAccounts",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetIpamDiscoveredPublicAddresses",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetIpamDiscoveredResourceCidrs",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetIpamPoolAllocations",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetIpamPoolCidrs",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetIpamResourceCidrs",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetLaunchTemplateData",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "GetManagedPrefixListAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetManagedPrefixListEntries",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetNetworkInsightsAccessScopeAnalysisFindings",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-access-scope-analysis",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetNetworkInsightsAccessScopeContent",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-access-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetPasswordData",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "GetReservedInstancesExchangeQuote",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetResourcePolicy",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetSecurityGroupsForVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "GetSerialConsoleAccessStatus",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetSnapshotBlockPublicAccessState",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetSpotPlacementScores",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetSubnetCidrReservations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetTransitGatewayAttachmentPropagations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetTransitGatewayMulticastDomainAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "GetTransitGatewayPolicyTableAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-policy-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayPolicyTableId"
          ]
        }
      ]
    },
    {
      "Name": "GetTransitGatewayPolicyTableEntries",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-policy-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayPolicyTableId"
          ]
        }
      ]
    },
    {
      "Name": "GetTransitGatewayPrefixListReferences",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetTransitGatewayRouteTableAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetTransitGatewayRouteTablePropagations",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetVerifiedAccessEndpointPolicy",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetVerifiedAccessEndpointTargets",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetVerifiedAccessGroupPolicy",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetVerifiedAccessInstanceWebAcl",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "GetVpnConnectionDeviceSampleConfiguration",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpn-connection-device-type"
        }
      ]
    },
    {
      "Name": "GetVpnConnectionDeviceTypes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "GetVpnTunnelReplacementStatus",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ImportByoipCidrToIpam",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ImportClientVpnClientCertificateRevocationList",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "ImportImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "import-image-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "ImportInstance",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "ImportKeyPair",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "key-pair",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "ImportSnapshot",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "import-snapshot-task",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "ImportVolume",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "InjectApiError",
      "ActionConditionKeys": [
        "ec2:FisActionId",
        "ec2:FisTargetArns",
        "ec2:Region"
      ]
    },
    {
      "Name": "ListImagesInRecycleBin",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ListSnapshotsInRecycleBin",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "LockSnapshot",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotCoolOffPeriod",
            "ec2:SnapshotID",
            "ec2:SnapshotLockDuration",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "ModifyAddressAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyAvailabilityZoneGroup",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ModifyCapacityReservation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:CapacityReservationFleet"
          ]
        }
      ]
    },
    {
      "Name": "ModifyCapacityReservationFleet",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation-fleet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyClientVpnEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "ModifyDefaultCreditSpecification",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ModifyEbsDefaultKmsKeyId",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ModifyFleet",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fleet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ModifyFpgaImageAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fpga-image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyHosts",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "dedicated-host",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyIdFormat",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ModifyIdentityIdFormat",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ModifyImageAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceCapacityReservationAttributes",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceCpuOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceCreditSpecification",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceEventStartTime",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceEventWindow",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance-event-window",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceMaintenanceOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceMetadataDefaults",
      "ActionConditionKeys": [
        "ec2:Attribute/${AttributeName}",
        "ec2:Region"
      ]
    },
    {
      "Name": "ModifyInstanceMetadataOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstanceNetworkPerformanceOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifyInstancePlacement",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "dedicated-host",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyIpam",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyIpamPool",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyIpamResourceCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyIpamResourceDiscovery",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-resource-discovery",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyIpamScope",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyLaunchTemplate",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyLocalGatewayRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "local-gateway-virtual-interface-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyManagedPrefixList",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyNetworkInterfaceAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ModifyPrivateDnsNameOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifyReservedInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "reserved-instances",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:InstanceType",
            "ec2:ReservedInstancesOfferingType",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ModifySecurityGroupRules",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "security-group-rule",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifySnapshotAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Add/group",
            "ec2:Add/userId",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:Remove/group",
            "ec2:Remove/userId",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "ModifySnapshotTier",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "ModifySpotFleetRequest",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "spot-fleet-request",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ModifySubnetAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ModifyTrafficMirrorFilterNetworkServices",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyTrafficMirrorFilterRule",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-filter-rule",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyTrafficMirrorSession",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "traffic-mirror-filter",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-session",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "traffic-mirror-target",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyTransitGateway",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "ModifyTransitGatewayPrefixListReference",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "ModifyTransitGatewayVpcAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVerifiedAccessEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "verified-access-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVerifiedAccessEndpointPolicy",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVerifiedAccessGroup",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVerifiedAccessGroupPolicy",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVerifiedAccessInstance",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVerifiedAccessInstanceLoggingConfiguration",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVerifiedAccessTrustProvider",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "verified-access-trust-provider",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVolume",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVolumeAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcBlockPublicAccessExclusion",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-block-public-access-exclusion",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcBlockPublicAccessOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ModifyVpcEndpoint",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcEndpointConnectionNotification",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcEndpointServiceConfiguration",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServicePrivateDnsName",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcEndpointServicePayerResponsibility",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcEndpointServicePermissions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcPeeringConnectionOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-peering-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpcTenancy",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpnConnection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RoutingType"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpnConnectionOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpnTunnelCertificate",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ModifyVpnTunnelOptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RoutingType"
          ]
        }
      ]
    },
    {
      "Name": "MonitorInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "MoveAddressToVpc",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "MoveByoipCidrToIpam",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "MoveCapacityReservationInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CapacityReservationFleet",
            "ec2:CreateDate",
            "ec2:DestinationCapacityReservationId",
            "ec2:EbsOptimized",
            "ec2:EndDate",
            "ec2:EndDateType",
            "ec2:InstanceCount",
            "ec2:InstanceMatchCriteria",
            "ec2:InstancePlatform",
            "ec2:InstanceType",
            "ec2:OutpostArn",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SourceCapacityReservationId",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "PauseVolumeIO",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "ProvisionByoipCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ProvisionIpamByoasn",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ProvisionIpamPoolCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-external-resource-verification-token",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ProvisionPublicIpv4PoolCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "PurchaseCapacityBlock",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:CapacityReservationFleet"
          ]
        }
      ]
    },
    {
      "Name": "PurchaseCapacityBlockExtension",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:CapacityReservationFleet"
          ]
        }
      ]
    },
    {
      "Name": "PurchaseHostReservation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "dedicated-host",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "PurchaseReservedInstancesOffering",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "PurchaseScheduledInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "PutResourcePolicy",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "verified-access-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "RebootInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "RegisterImage",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ImageID",
            "ec2:Owner"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "RegisterInstanceEventNotificationAttributes",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "RegisterTransitGatewayMulticastGroupMembers",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "RegisterTransitGatewayMulticastGroupSources",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "RejectCapacityReservationBillingOwnership",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CapacityReservationFleet",
            "ec2:CreateDate",
            "ec2:DestinationCapacityReservationId",
            "ec2:EbsOptimized",
            "ec2:EndDate",
            "ec2:EndDateType",
            "ec2:InstanceCount",
            "ec2:InstanceMatchCriteria",
            "ec2:InstancePlatform",
            "ec2:InstanceType",
            "ec2:OutpostArn",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SourceCapacityReservationId",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "RejectTransitGatewayMulticastDomainAssociations",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "RejectTransitGatewayPeeringAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "RejectTransitGatewayVpcAttachment",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        }
      ]
    },
    {
      "Name": "RejectVpcEndpointConnections",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "RejectVpcPeeringConnection",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-peering-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AccepterVpc",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
          ]
        }
      ]
    },
    {
      "Name": "ReleaseAddress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ReleaseHosts",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "dedicated-host",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ReleaseIpamPoolAllocation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "ipam-pool",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ReplaceIamInstanceProfileAssociation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ReplaceImageCriteriaInAllowedImagesSettings",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ReplaceNetworkAclAssociation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-acl",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ReplaceNetworkAclEntry",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-acl",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:NetworkAclID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ReplaceRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ReplaceRouteTableAssociation",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "internet-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:InternetGatewayID",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv4pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "ipv6pool-ec2",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "vpn-gateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ReplaceTransitGatewayRoute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-attachment",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayAttachmentId"
          ]
        },
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "ReplaceVpnTunnel",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpn-connection",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ReportInstanceStatus",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID"
          ]
        }
      ]
    },
    {
      "Name": "RequestSpotFleet",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "key-pair",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        },
        {
          "Name": "spot-fleet-request",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "RequestSpotInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "key-pair",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
          ]
        },
        {
          "Name": "spot-instances-request",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ResetAddressAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "elastic-ip",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AllocationId",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ResetEbsDefaultKmsKeyId",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "ResetFpgaImageAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "fpga-image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "ResetImageAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "ResetInstanceAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "ResetNetworkInterfaceAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "ResetSnapshotAttribute",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "RestoreAddressToClassic",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "RestoreImageFromRecycleBin",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        }
      ]
    },
    {
      "Name": "RestoreManagedPrefixListVersion",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "prefix-list",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "RestoreSnapshotFromRecycleBin",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "RestoreSnapshotTier",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "RevokeClientVpnIngress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "RevokeSecurityGroupEgress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "RevokeSecurityGroupIngress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "RunInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "capacity-reservation",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate"
          ]
        },
        {
          "Name": "elastic-gpu",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ElasticGpuType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "elastic-inference"
        },
        {
          "Name": "group"
        },
        {
          "Name": "image",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Owner",
            "ec2:Public",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
          ]
        },
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "key-pair",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "launch-template",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ManagedResourceOperator",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "license-configuration"
        },
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AssociatePublicIpAddress",
            "ec2:AuthorizedService",
            "ec2:AvailabilityZone",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "placement-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        },
        {
          "Name": "subnet",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
          ]
        },
        {
          "Name": "volume",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:ManagedResourceOperator",
            "ec2:ParentSnapshot",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
          ]
        }
      ]
    },
    {
      "Name": "RunScheduledInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "SearchLocalGatewayRoutes",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "local-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "SearchTransitGatewayMulticastGroups",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-multicast-domain",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayMulticastDomainId"
          ]
        }
      ]
    },
    {
      "Name": "SearchTransitGatewayRoutes",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "transit-gateway-route-table",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:transitGatewayRouteTableId"
          ]
        }
      ]
    },
    {
      "Name": "SendDiagnosticInterrupt",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "SendSpotInstanceInterruptions",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "StartDeclarativePoliciesReport",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "StartInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        },
        {
          "Name": "license-configuration"
        }
      ]
    },
    {
      "Name": "StartNetworkInsightsAccessScopeAnalysis",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-access-scope",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        },
        {
          "Name": "network-insights-access-scope-analysis",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        }
      ]
    },
    {
      "Name": "StartNetworkInsightsAnalysis",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-insights-analysis",
          "ConditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:TagKeys"
          ]
        },
        {
          "Name": "network-insights-path",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "StartVpcEndpointServicePrivateDnsVerification",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "vpc-endpoint-service",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:vpceMultiRegion",
            "ec2:vpceSupportedRegion"
          ]
        }
      ]
    },
    {
      "Name": "StopInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "TerminateClientVpnConnections",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "client-vpn-endpoint",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
          ]
        }
      ]
    },
    {
      "Name": "TerminateInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "UnassignIpv6Addresses",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "UnassignPrivateIpAddresses",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "network-interface",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:ManagedResourceOperator",
            "ec2:NetworkInterfaceID",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "UnassignPrivateNatGatewayAddress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "natgateway",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}"
          ]
        }
      ]
    },
    {
      "Name": "UnlockSnapshot",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "snapshot",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:Encrypted",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotCoolOffPeriod",
            "ec2:SnapshotID",
            "ec2:SnapshotLockDuration",
            "ec2:SnapshotTime",
            "ec2:VolumeSize"
          ]
        }
      ]
    },
    {
      "Name": "UnmonitorInstances",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "instance",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:AvailabilityZone",
            "ec2:CpuOptionsAmdSevSnp",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceBandwidthWeighting",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:ManagedResourceOperator",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
          ]
        }
      ]
    },
    {
      "Name": "UpdateSecurityGroupRuleDescriptionsEgress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "UpdateSecurityGroupRuleDescriptionsIngress",
      "ActionConditionKeys": [
        "ec2:Region"
      ],
      "Resources": [
        {
          "Name": "security-group",
          "ConditionKeys": [
            "aws:ResourceTag/${TagKey}",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
          ]
        }
      ]
    },
    {
      "Name": "WithdrawByoipCidr",
      "ActionConditionKeys": [
        "ec2:Region"
      ]
    }
  ],
  "ConditionKeys": [
    {
      "Name": "aws:RequestTag/${TagKey}",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "aws:ResourceTag/${TagKey}",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "aws:TagKeys",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "ec2:AccepterVpc",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:Add/group",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Add/userId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:AllocationId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:AssociatePublicIpAddress",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "ec2:Attribute",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Attribute/${AttributeName}",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:AuthenticationType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:AuthorizedService",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:AuthorizedUser",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:AutoPlacement",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:AvailabilityZone",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:CapacityReservationFleet",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:ClientRootCertificateChainArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:CloudwatchLogGroupArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:CloudwatchLogStreamArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:CpuOptionsAmdSevSnp",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:CreateAction",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:CreateDate",
      "Types": [
        "Date"
      ]
    },
    {
      "Name": "ec2:DPDTimeoutSeconds",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:DestinationCapacityReservationId",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:DhcpOptionsID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:DirectoryArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:Domain",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:EbsOptimized",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "ec2:ElasticGpuType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Encrypted",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "ec2:EndDate",
      "Types": [
        "Date"
      ]
    },
    {
      "Name": "ec2:EndDateType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:FisActionId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:FisTargetArns",
      "Types": [
        "ArrayOfARN"
      ]
    },
    {
      "Name": "ec2:GatewayType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:HostRecovery",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:IKEVersions",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "ec2:ImageID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:ImageType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InsideTunnelCidr",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InsideTunnelIpv6Cidr",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InstanceAutoRecovery",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InstanceBandwidthWeighting",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InstanceCount",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:InstanceID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InstanceMarketType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InstanceMatchCriteria",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InstanceMetadataTags",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InstancePlatform",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:InstanceProfile",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:InstanceType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:InternetGatewayID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Ipv4IpamPoolId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Ipv6IpamPoolId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:IsLaunchTemplateResource",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "ec2:KeyPairName",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:KeyPairType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:KmsKeyId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:LaunchTemplate",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:Location",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:ManagedResourceOperator",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:MetadataHttpEndpoint",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:MetadataHttpPutResponseHopLimit",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:MetadataHttpTokens",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:NetworkAclID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:NetworkInterfaceID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:NewInstanceProfile",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:OutpostArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:Owner",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:ParentSnapshot",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:ParentVolume",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:Permission",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Phase1DHGroup",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "ec2:Phase1EncryptionAlgorithms",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "ec2:Phase1IntegrityAlgorithms",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "ec2:Phase1LifetimeSeconds",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:Phase2DHGroup",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "ec2:Phase2EncryptionAlgorithms",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "ec2:Phase2IntegrityAlgorithms",
      "Types": [
        "ArrayOfString"
      ]
    },
    {
      "Name": "ec2:Phase2LifetimeSeconds",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:PlacementGroup",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:PlacementGroupName",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:PlacementGroupStrategy",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:ProductCode",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Public",
      "Types": [
        "Bool"
      ]
    },
    {
      "Name": "ec2:PublicIpAddress",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Quantity",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:Region",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:RekeyFuzzPercentage",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:RekeyMarginTimeSeconds",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:Remove/group",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Remove/userId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:ReplayWindowSizePackets",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:RequesterVpc",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:ReservedInstancesOfferingType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:ResourceTag/${TagKey}",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:RoleDelivery",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:RootDeviceType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:RouteTableID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:RoutingType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:SamlProviderArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:SecurityGroupID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:ServerCertificateArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:SnapshotCoolOffPeriod",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:SnapshotID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:SnapshotLockDuration",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:SnapshotTime",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:SourceAvailabilityZone",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:SourceCapacityReservationId",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:SourceInstanceARN",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:SourceOutpostArn",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:Subnet",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:SubnetID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Tenancy",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:VolumeID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:VolumeIops",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:VolumeSize",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:VolumeThroughput",
      "Types": [
        "Numeric"
      ]
    },
    {
      "Name": "ec2:VolumeType",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:Vpc",
      "Types": [
        "ARN"
      ]
    },
    {
      "Name": "ec2:VpcID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:VpcPeeringConnectionID",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:VpceServiceName",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:VpceServiceOwner",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:VpceServicePrivateDnsName",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:transitGatewayAttachmentId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:transitGatewayConnectPeerId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:transitGatewayId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:transitGatewayMulticastDomainId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:transitGatewayPolicyTableId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:transitGatewayRouteTableAnnouncementId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:transitGatewayRouteTableId",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:vpceMultiRegion",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:vpceServiceRegion",
      "Types": [
        "String"
      ]
    },
    {
      "Name": "ec2:vpceSupportedRegion",
      "Types": [
        "String"
      ]
    }
  ],
  "Resources": [
    {
      "Name": "capacity-reservation",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:CapacityReservationFleet",
        "ec2:CreateDate",
        "ec2:DestinationCapacityReservationId",
        "ec2:EbsOptimized",
        "ec2:EndDate",
        "ec2:EndDateType",
        "ec2:InstanceCount",
        "ec2:InstanceMatchCriteria",
        "ec2:InstancePlatform",
        "ec2:InstanceType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:OutpostArn",
        "ec2:PlacementGroup",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SourceCapacityReservationId",
        "ec2:Tenancy"
      ]
    },
    {
      "Name": "capacity-reservation-fleet",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "carrier-gateway",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "ec2:Vpc"
      ]
    },
    {
      "Name": "certificate",
      "ARNFormats": [
        "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}"
      ]
    },
    {
      "Name": "client-vpn-endpoint",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:ClientRootCertificateChainArn",
        "ec2:CloudwatchLogGroupArn",
        "ec2:CloudwatchLogStreamArn",
        "ec2:DirectoryArn",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SamlProviderArn",
        "ec2:ServerCertificateArn"
      ]
    },
    {
      "Name": "coip-pool",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:coip-pool/${Ipv4PoolCoipId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "customer-gateway",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "declarative-policies-report",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:declarative-policies-report/${DeclarativePoliciesReportId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "dedicated-host",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AutoPlacement",
        "ec2:AvailabilityZone",
        "ec2:HostRecovery",
        "ec2:InstanceType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Quantity",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "dhcp-options",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:DhcpOptionsID",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "egress-only-internet-gateway",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "elastic-gpu",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:ElasticGpuType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "elastic-inference",
      "ARNFormats": [
        "arn:${Partition}:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/${AcceleratorId}"
      ]
    },
    {
      "Name": "elastic-ip",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AllocationId",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Domain",
        "ec2:PublicIpAddress",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "export-image-task",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "export-instance-task",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "fleet",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "fpga-image",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:fpga-image/${FpgaImageId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "group",
      "ARNFormats": [
        "arn:${Partition}:resource-groups:${Region}:${Account}:group/${GroupName}"
      ]
    },
    {
      "Name": "host-reservation",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:host-reservation/${HostReservationId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "image",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}::image/${ImageId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:ImageID",
        "ec2:ImageType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Owner",
        "ec2:Public",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType"
      ]
    },
    {
      "Name": "import-image-task",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "import-snapshot-task",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "instance",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:CpuOptionsAmdSevSnp",
        "ec2:EbsOptimized",
        "ec2:InstanceAutoRecovery",
        "ec2:InstanceBandwidthWeighting",
        "ec2:InstanceID",
        "ec2:InstanceMarketType",
        "ec2:InstanceMetadataTags",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:ManagedResourceOperator",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:NewInstanceProfile",
        "ec2:PlacementGroup",
        "ec2:ProductCode",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RootDeviceType",
        "ec2:Tenancy"
      ]
    },
    {
      "Name": "instance-connect-endpoint",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:instance-connect-endpoint/${InstanceConnectEndpointId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SubnetID"
      ]
    },
    {
      "Name": "instance-event-window",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "internet-gateway",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:InternetGatewayID",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "ipam",
      "ARNFormats": [
        "arn:${Partition}:ec2::${Account}:ipam/${IpamId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "ipam-external-resource-verification-token",
      "ARNFormats": [
        "arn:${Partition}:ec2::${Account}:ipam-external-resource-verification-token/${IpamExternalResourceVerificationTokenId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "ipam-pool",
      "ARNFormats": [
        "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "ipam-resource-discovery",
      "ARNFormats": [
        "arn:${Partition}:ec2::${Account}:ipam-resource-discovery/${IpamResourceDiscoveryId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "ipam-resource-discovery-association",
      "ARNFormats": [
        "arn:${Partition}:ec2::${Account}:ipam-resource-discovery-association/${IpamResourceDiscoveryAssociationId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "ipam-scope",
      "ARNFormats": [
        "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "ipv4pool-ec2",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "ipv6pool-ec2",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "key-pair",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:IsLaunchTemplateResource",
        "ec2:KeyPairName",
        "ec2:KeyPairType",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "launch-template",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:ManagedResourceOperator",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "license-configuration",
      "ARNFormats": [
        "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration:${LicenseConfigurationId}"
      ]
    },
    {
      "Name": "local-gateway",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "local-gateway-route-table",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "local-gateway-route-table-virtual-interface-group-association",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "local-gateway-route-table-vpc-association",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "local-gateway-virtual-interface",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "local-gateway-virtual-interface-group",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "natgateway",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "network-acl",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:NetworkAclID",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Vpc"
      ]
    },
    {
      "Name": "network-insights-access-scope",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "network-insights-access-scope-analysis",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "network-insights-analysis",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "network-insights-path",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "network-interface",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AssociatePublicIpAddress",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AuthorizedService",
        "ec2:AuthorizedUser",
        "ec2:AvailabilityZone",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:ManagedResourceOperator",
        "ec2:NetworkInterfaceID",
        "ec2:Permission",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Subnet",
        "ec2:Vpc"
      ]
    },
    {
      "Name": "placement-group",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:PlacementGroupName",
        "ec2:PlacementGroupStrategy",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "prefix-list",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "replace-root-volume-task",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "reserved-instances",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:InstanceType",
        "ec2:Region",
        "ec2:ReservedInstancesOfferingType",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy"
      ]
    },
    {
      "Name": "role",
      "ARNFormats": [
        "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}"
      ]
    },
    {
      "Name": "route-table",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RouteTableID",
        "ec2:Vpc"
      ]
    },
    {
      "Name": "security-group",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SecurityGroupID",
        "ec2:Vpc"
      ]
    },
    {
      "Name": "security-group-rule",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "snapshot",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Add/group",
        "ec2:Add/userId",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Location",
        "ec2:OutpostArn",
        "ec2:Owner",
        "ec2:ParentVolume",
        "ec2:Region",
        "ec2:Remove/group",
        "ec2:Remove/userId",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SnapshotCoolOffPeriod",
        "ec2:SnapshotID",
        "ec2:SnapshotLockDuration",
        "ec2:SnapshotTime",
        "ec2:SourceAvailabilityZone",
        "ec2:SourceOutpostArn",
        "ec2:VolumeSize"
      ]
    },
    {
      "Name": "spot-fleet-request",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "spot-instances-request",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "subnet",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:SubnetID",
        "ec2:Vpc"
      ]
    },
    {
      "Name": "subnet-cidr-reservation",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "traffic-mirror-filter",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "traffic-mirror-filter-rule",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "traffic-mirror-session",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "traffic-mirror-target",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "transit-gateway",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:transitGatewayId"
      ]
    },
    {
      "Name": "transit-gateway-attachment",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:transitGatewayAttachmentId"
      ]
    },
    {
      "Name": "transit-gateway-connect-peer",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:transitGatewayConnectPeerId"
      ]
    },
    {
      "Name": "transit-gateway-multicast-domain",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:transitGatewayMulticastDomainId"
      ]
    },
    {
      "Name": "transit-gateway-policy-table",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:transitGatewayPolicyTableId"
      ]
    },
    {
      "Name": "transit-gateway-route-table",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:transitGatewayRouteTableId"
      ]
    },
    {
      "Name": "transit-gateway-route-table-announcement",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:transitGatewayRouteTableAnnouncementId"
      ]
    },
    {
      "Name": "verified-access-endpoint",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:verified-access-endpoint/${VerifiedAccessEndpointId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "verified-access-endpoint-target",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:verified-access-endpoint-target/${VerifiedAccessEndpointTargetId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "verified-access-group",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:verified-access-group/${VerifiedAccessGroupId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "verified-access-instance",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:verified-access-instance/${VerifiedAccessInstanceId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "verified-access-policy",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:verified-access-policy/${VerifiedAccessPolicyId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "verified-access-trust-provider",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:verified-access-trust-provider/${VerifiedAccessTrustProviderId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "volume",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AvailabilityZone",
        "ec2:Encrypted",
        "ec2:IsLaunchTemplateResource",
        "ec2:KmsKeyId",
        "ec2:LaunchTemplate",
        "ec2:ManagedResourceOperator",
        "ec2:ParentSnapshot",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VolumeID",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeThroughput",
        "ec2:VolumeType"
      ]
    },
    {
      "Name": "vpc",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Ipv4IpamPoolId",
        "ec2:Ipv6IpamPoolId",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:Tenancy",
        "ec2:VpcID"
      ]
    },
    {
      "Name": "vpc-block-public-access-exclusion",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpc-block-public-access-exclusion/${VpcBlockPublicAccessExclusionId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "vpc-endpoint",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpceServiceName",
        "ec2:VpceServiceOwner"
      ]
    },
    {
      "Name": "vpc-endpoint-connection",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-connection/${VpcEndpointConnectionId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "vpc-endpoint-service",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpceServicePrivateDnsName",
        "ec2:vpceMultiRegion",
        "ec2:vpceServiceRegion",
        "ec2:vpceSupportedRegion"
      ]
    },
    {
      "Name": "vpc-endpoint-service-permission",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service-permission/${VpcEndpointServicePermissionId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "vpc-flow-log",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    },
    {
      "Name": "vpc-peering-connection",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AccepterVpc",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:Region",
        "ec2:RequesterVpc",
        "ec2:ResourceTag/${TagKey}",
        "ec2:VpcPeeringConnectionID"
      ]
    },
    {
      "Name": "vpn-connection",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Attribute",
        "ec2:Attribute/${AttributeName}",
        "ec2:AuthenticationType",
        "ec2:DPDTimeoutSeconds",
        "ec2:GatewayType",
        "ec2:IKEVersions",
        "ec2:InsideTunnelCidr",
        "ec2:InsideTunnelIpv6Cidr",
        "ec2:Phase1DHGroup",
        "ec2:Phase1EncryptionAlgorithms",
        "ec2:Phase1IntegrityAlgorithms",
        "ec2:Phase1LifetimeSeconds",
        "ec2:Phase2DHGroup",
        "ec2:Phase2EncryptionAlgorithms",
        "ec2:Phase2IntegrityAlgorithms",
        "ec2:Phase2LifetimeSeconds",
        "ec2:Region",
        "ec2:RekeyFuzzPercentage",
        "ec2:RekeyMarginTimeSeconds",
        "ec2:ReplayWindowSizePackets",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RoutingType"
      ]
    },
    {
      "Name": "vpn-connection-device-type",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection-device-type/${VpnConnectionDeviceTypeId}"
      ],
      "ConditionKeys": [
        "ec2:Region"
      ]
    },
    {
      "Name": "vpn-gateway",
      "ARNFormats": [
        "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}"
      ],
      "ConditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ec2:Region",
        "ec2:ResourceTag/${TagKey}"
      ]
    }
  ],
  "Version": "v1.1"
}